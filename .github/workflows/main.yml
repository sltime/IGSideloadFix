name: Build IGSideloadFix with Rocket

on:
  workflow_dispatch:
    inputs:
      decrypted_ipa_url:
        description: "Direct URL of the decrypted Instagram IPA"
        required: true
      rocket_deb_url:
        description: "Direct Dropbox URL of Rocket .deb (use dl=1)"
        required: true

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          # Install missing packages only
          for pkg in make ldid dpkg llvm unzip wget; do
            if ! command -v $pkg >/dev/null 2>&1; then
              echo "Installing $pkg..."
              brew install $pkg
            else
              echo "$pkg is already installed, skipping."
            fi
          done

      - name: Add GNU Make to PATH
        run: |
          echo "$(brew --prefix make)/libexec/gnubin" >> "$GITHUB_PATH"

      - name: Add LLVM to PATH
        run: |
          echo "$(brew --prefix llvm)/bin" >> "$GITHUB_PATH"

      - name: Download Theos
        uses: actions/checkout@v4
        with:
          repository: theos/theos
          ref: master
          path: theos
          submodules: recursive

      - name: Download Instagram IPA
        run: |
          wget "${{ github.event.inputs.decrypted_ipa_url }}" --no-verbose -O Instagram.ipa
          unzip -q Instagram.ipa -d tmp_ipa
          IG_VERSION=$(grep -A 1 '<key>CFBundleShortVersionString</key>' tmp_ipa/Payload/Instagram.app/Info.plist | grep '<string>' | awk -F'[><]' '{print $3}')
          echo "IG_VERSION=${IG_VERSION}" >> "$GITHUB_ENV"

      - name: Download and extract Rocket dylib
        run: |
          # Download Dropbox .deb raw file
          wget "${{ github.event.inputs.rocket_deb_url }}" --no-verbose -O rocket.deb

          # Extract .deb data archive (supports lzma/xz/gz)
          ar x rocket.deb data.tar.lzma 2>/dev/null || ar x rocket.deb data.tar.xz 2>/dev/null || ar x rocket.deb data.tar.gz 2>/dev/null
          DATA_TAR=$(ls data.tar.*)

          # Extract tar to temporary folder
          mkdir -p rocket_tmp
          tar -xf "$DATA_TAR" -C rocket_tmp

          # Dynamically find Rocket.dylib
          ROCKET_PATH=$(find rocket_tmp -type f -name "Rocket.dylib" | head -n1)
          if [ -z "$ROCKET_PATH" ]; then
              echo "Error: Rocket.dylib not found in the .deb"
              exit 1
          fi
          cp "$ROCKET_PATH" Rocket.dylib

      - name: Patch Rocket dylib
        run: |
          # Patch +[RABuildManager installType] to mov x0, #1; ret
          llvm-objcopy --update-section .text=<(printf '\x20\x00\x80\xd2\xc0\x03\x5f\xd6') Rocket.dylib Rocket_patched.dylib
          mv Rocket_patched.dylib Rocket.dylib

      - name: Extract Rocket.bundle resources
        run: |
          # Look for Rocket.bundle inside the extracted deb
          BUNDLE_PATH=$(find rocket_tmp -type d -name "Rocket.bundle" | head -n1)
          if [ -z "$BUNDLE_PATH" ]; then
              echo "Error: Rocket.bundle not found in the .deb"
              exit 1
          fi

          # Copy bundle contents into Resources/
          mkdir -p Resources
          cp -R "$BUNDLE_PATH/" Resources/
          echo "Rocket.bundle resources copied to Resources/"

      - name: Configure Makefile
        run: |
          sed -i '' 's/^Hackogram_INJECT_DYLIBS.*/Hackogram_INJECT_DYLIBS = Rocket.dylib/' Makefile

      - name: Build patched IPA
        run: |
          make package FINALPACKAGE=1 CODESIGN_IPA=0

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: IGSideloadFix-Instagram-${{ env.IG_VERSION }}
          path: packages/*.ipa
