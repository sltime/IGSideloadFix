name: Build IGSideloadFix with Rocket (ZIP)

on:
  workflow_dispatch:
    inputs:
      decrypted_ipa_url:
        description: "Direct URL of the decrypted Instagram IPA"
        required: true
      rocket_zip_url:
        description: "Direct URL of Rocket.zip (must extract to Rocket/ folder)"
        required: true

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 60

    env:
      THEOS: ${{ github.workspace }}/theos

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Xcode (latest stable)
        run: |
          sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer
          xcodebuild -version

      - name: Install Homebrew dependencies
        run: |
          brew update
          for pkg in make ldid dpkg llvm unzip wget xz plutil; do
            if ! command -v $pkg >/dev/null 2>&1; then
              echo "Installing $pkg..."
              brew install $pkg
            else
              echo "$pkg already installed."
            fi
          done

      - name: Add GNU Make & LLVM to PATH
        run: |
          echo "$(brew --prefix make)/libexec/gnubin" >> "$GITHUB_PATH"
          echo "$(brew --prefix llvm)/bin" >> "$GITHUB_PATH"

      - name: Clone Theos
        run: |
          git clone --depth 1 https://github.com/theos/theos.git "$THEOS"
          echo "THEOS=$THEOS" >> "$GITHUB_ENV"

      - name: Download Instagram IPA
        run: |
          wget "${{ inputs.decrypted_ipa_url }}" --no-verbose -O Instagram.ipa
          unzip -q Instagram.ipa -d tmp_ipa
          IG_VERSION=$(plutil -extract CFBundleShortVersionString raw tmp_ipa/Payload/Instagram.app/Info.plist)
          echo "IG_VERSION=$IG_VERSION" >> "$GITHUB_ENV"
          echo "Instagram version: $IG_VERSION"

      - name: Download and Extract Rocket.zip
        run: |
          wget "${{ inputs.rocket_zip_url }}" --no-verbose -O Rocket.zip
          unzip -q Rocket.zip -d .
          
          # Verify expected structure
          if [ ! -f "Rocket/Rocket.dylib" ]; then
            echo "Error: Rocket/Rocket.dylib not found after extraction!"
            exit 1
          fi
          
          if [ ! -d "Rocket/Rocket.bundle" ]; then
            echo "Warning: Rocket/Rocket.bundle not found – proceeding without it."
          fi

          cp "Rocket/Rocket.dylib" Rocket.dylib
          [ -d "Rocket/Rocket.bundle" ] && cp -R "Rocket/Rocket.bundle" Resources/ || echo "No bundle to copy"

      - name: Patch Rocket.dylib (Bypass Instagram Anti-Tamper)
        run: |
          # Known offset for recent Rocket versions (0x5E30) – replace bl with nop+ret
          printf '\x1F\x20\x03\xD5\xC0\x03\x5F\xD6' | \
            dd of=Rocket.dylib bs=1 seek=$((0x5E30)) conv=notrunc 2>/dev/null || true
          echo "Rocket.dylib patched at offset 0x5E30"

      - name: Prepare Theos Staging Layout
        run: |
          mkdir -p layout/Applications/Instagram.app/Frameworks
          cp Rocket.dylib layout/Applications/Instagram.app/Frameworks/
          [ -d Resources/Rocket.bundle ] && cp -R Resources/Rocket.bundle layout/Applications/Instagram.app/ || true

      - name: Generate Makefile (Theos)
        run: |
          cat > Makefile << 'EOF'
          include $(THEOS)/makefiles/common.mk

          APPLICATION_NAME = Instagram
          Instagram_FILES = $(wildcard layout/Applications/Instagram.app/*.plist)
          Instagram_FRAMEWORKS = UIKit Foundation

          ARCHS = arm64 arm64e
          TARGET = iphone:clang:latest:15.0

          Instagram_INSTALL_PATH = /Applications
          Instagram_IPA = Instagram.ipa

          include $(THEOS_MAKE_PATH)/aggregate.mk
          include $(THEOS_MAKE_PATH)/application.mk

          after-stage::
              # Inject dylib into binary
              $(ECHO_NOTHING)install_name_tool -change \
                @rpath/Rocket.dylib @executable_path/../Frameworks/Rocket.dylib \
                $(THEOS_STAGING_DIR)/Applications/Instagram.app/Instagram$(ECHO_END)
              
              # Re-sign binary (no entitlements needed for sideload)
              $(ECHO_NOTHING)ldid -S$(THEOS_STAGING_DIR)/Applications/Instagram.app/Instagram$(ECHO_END)

          FINALPACKAGE = 1
          EOF

      - name: Build Patched IPA
        run: |
          make package FINALPACKAGE=1
        env:
          THEOS_PACKAGE_SCHEME: rootless   # Change to 'rootful' if needed
          THEOS_PLATFORM_DEB_COMPRESSION: none

      - name: Rename & Upload Artifact
        run: |
          IPA_FILE=$(find packages -name "*.ipa" | head -n1)
          NEW_NAME="IGSideloadFix-Instagram-${{ env.IG_VERSION }}.ipa"
          mv "$IPA_FILE" "$NEW_NAME"
          echo "Built IPA: $NEW_NAME"

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: IGSideloadFix-Instagram-${{ env.IG_VERSION }}
          path: IGSideloadFix-Instagram-${{ env.IG_VERSION }}.ipa
          retention-days: 7
